{yun:}include file="$wapstyle/member/cheader.htm"{/yun}
<!-- 页面整体部分 -->
<div id="yunvue" class="none">

    <div class="issue_post_body">
        <form onsubmit="return formSubmit(this)">
            <div class=" yun_createbox">

                <div class="yun_createlist">

                    <div class="yun_create_name"><span class="m_bt">*</span>联&nbsp;&nbsp;系&nbsp;&nbsp;人</div>
                    <div class="yun_create_text">
                        <input name="link_man" placeholder="请输入联系人" v-model="info.link_man"/>
                    </div>
                </div>
                <div class="yun_createlist">
                    <div class="yun_create_name"><span class="m_bt">*</span>手机号码</div>
                    <div class="yun_create_text">
                        <input name="link_moblie" placeholder="请输入手机号码" v-model="info.link_moblie" type="number"  maxlength="11"/>
                    </div>
                </div>
                <div class="yun_createlist">
                    <div class="yun_create_name"> 固定电话</div>
                    <div class="yun_create_text">
                        <input name="link_phone" placeholder="请输入固定电话" v-model="info.link_phone" type="text"  />
                    </div>
                </div>
                <div class="yun_createlist">
                    <div class="yun_create_name"><span class="m_bt">&nbsp;</span>联系邮箱</div>
                    <div class="yun_create_text">
                        <input name="email" placeholder="请输入联系邮箱" v-model="info.email" type="text"/>
                    </div>
                </div>
                <div class="yun_createlist">
                    <div class="yun_create_name"><span class="m_bt">*</span>所在地区</div>
                    <div class="yun_create_text_p" @click="areaShow=true" style="color: #666;">{{city}}</div>
                    <input hidden="true" name="provinceid" :value="provinceid"/>
                    <input hidden="true" name="cityid" :value="cityid"/>
                    <input hidden="true" name="three_cityid" :value="threecityid"/>

                    <div class="yun_create_fx">
                        <img src="{yun:}$wap_style{/yun}/images/issue_add.png" alt="">
                    </div>
                </div>
                <div class="yun_createlist create_resume_listend">
                    <div class="yun_create_name"><span class="m_bt">*</span>详细地址</div>
                    <div class="yun_create_text">
                        <input name="link_address" placeholder="请输入详细地址" v-model="address"/>
                    </div>

                    <div class="yun_create_fx" @click="openAddress">
                        <img src="{yun:}$wap_style{/yun}/images/issue_location.png" alt="">
                    </div>
                </div>
            </div>
            <div class="security_bth">
                <button type="submit" class="security_bth_but">保 存</button>
            </div>
        </form>
    </div>

    <van-popup v-model="addressShow" position="bottom">
        <div class="issue_post_body">
            <form onsubmit="return jobAddress(this)">
                <div class="issue_post_body_card">
                    <div class="post_body_card_job">
                        <div class="body_card_job_box">
                            <div class="card_job_box_post">详细地址</div>
                            <div class="card_job_box_name">
                                <input placeholder="请输入企业详细地址" v-model="address" name="address"/>
                            </div>
                        </div>
                        <div class="body_card_job_icon"></div>
                    </div>
                    <div class="post_body_card_job">
                        <div class="body_card_job_box" style="font-size: .4rem;">请单击地图完成地址标记</div>
                        <div class="body_card_job_icon">
                            <img src="{yun:}$wap_style{/yun}/images/issue_location.png" alt="">
                        </div>
                    </div>
                    <div class="post_body_card_job">
                        <div id="map_container"
                             style="width:100%;height:280px;overflow: hidden;margin:0;font-family:'微软雅黑';"></div>
                    </div>
                </div>
                <div class="security_bth">
                    <button type="submit" class="security_bth_but">确 定</button>
                </div>
            </form>
        </div>
    </van-popup>

    <!--城市选择-->
    <van-popup v-model="areaShow" round position="bottom">
        <van-cascader v-model="areaValue" title="请选择工作区域" :options="areaOptions" @close="areaShow = false" @finish="onAreaFinish"/>
    </van-popup>
</div>

<script src="{yun:}$wap_style{/yun}/js/jsMath.js?v={yun:}$config.cachecode{/yun}" language="javascript"></script>
<script type="text/javascript" src="{yun:}$config.mapurl{/yun}"></script>
<script src="{yun:}$plusstyle{/yun}/city.cache.js?v={yun:}$config.cachecode{/yun}" language="javascript"></script>
<script src="{yun:}$wap_style{/yun}/js/category.js?v={yun:}$config.cachecode{/yun}" language="javascript"></script>

<script>

    var addressId = parseInt('{yun:}$smarty.get.id{/yun}');

    var cityParam = {
        one_all: false,
        two_all: false,
    };
    var cityData = cityCategory(cityParam);
    var map = {},
        local;
    var yunvue = new Vue({
        el: '#yunvue',
        data: {

            islook: false,

            info: {},

            city: '请选择所在城市',

            areaShow: false,
            areaValue: 0,
            areaName: '',

            areaOptions: cityData,

            provinceid: 0,
            cityid: 0,
            threecityid: 0,

            latitude: '',
            longitude: '',

            address: '',
            addressShow: false,

            addressId: addressId ? addressId : ''
        },
        created() {
            this.getAddressInfo();
        },
        watch: {
            address: function (value) {
                if (value) {
                    this.info.link_address = value;
                    debounce(this.localsearch());
                }
            },
        },
        methods: {

            onAreaFinish({selectedOptions}) {

                this.provinceid = 0;
                this.cityid = 0;
                this.threecityid = 0;

                let cityStr = '';

                if (selectedOptions[0] && selectedOptions[0].value > 0) {
                    if (selectedOptions[0]) {
                        this.provinceid = selectedOptions[0].value;
                        cityStr += selectedOptions[0].text;
                        this.areaName = selectedOptions[0].text;
                    }
                }
                if (selectedOptions[1] && selectedOptions[1].value > 0) {
                    if (selectedOptions[1]) {
                        this.cityid = selectedOptions[1].value;
                        cityStr += ' ' + selectedOptions[1].text;
                        this.areaName = selectedOptions[0].text;
                    }
                }
                if (selectedOptions[2] && selectedOptions[2].value > 0) {
                    if (selectedOptions[1]) {
                        this.threecityid = selectedOptions[2].value;
                        cityStr += ' ' + selectedOptions[2].text;
                    }
                }
                this.city = cityStr ? cityStr : citydefault;
                this.areaShow = false;
            },

            localsearch: function () {
                local = new BMap.LocalSearch(map, {
                    renderOptions: {
                        map: map,
                        panel: "r-result",
                        autoViewport: true,
                        selectFirstResult: false
                    },
                    onSearchComplete: this.getLocalResult
                });
                if (this.info.link_address != '请输入详细地址') {
                    local.search(this.city + this.info.link_address);
                }
            },

            getLocalResult: function () {
                let that = this;

                var points = local.getResults();

                if (points.getPoi(0)) {

                    var lngLat = points.getPoi(0).point;
                    that.setLocation('map_container', lngLat.lng, lngLat.lat);

                    that.latitude = lngLat.lat;
                    that.longitude = lngLat.lng;
                } else {

                    // 解决移动端 click事件点击无效
                    map.addEventListener("touchmove", function (e) {
                        map.enableDragging();
                    });
                    //  触摸结束时触发次此事件  此时开启禁止拖动
                    map.addEventListener("touchend", function (e) {
                        map.disableDragging();
                    });
                    // 初始化地图 禁止拖动   注：虽禁止拖动，但是可以出发拖动事件
                    map.disableDragging();
                    showToast('该地址未搜索到！', 2);
                    return false;
                }
            },

            setLocation: function (id, x, y) {
                if (!x && !y) {
                    x = '116.404';
                    y = '39.915';
                }
                var point = new BMap.Point(x, y);
                var marker = new BMap.Marker(point);
                var opts = {
                    type: BMAP_NAVIGATION_CONTROL_LARGE
                }
                map.enableScrollWheelZoom(true);
                map.addControl(new BMap.NavigationControl(opts));
                map.centerAndZoom(point, 15);
                map.addOverlay(marker);

                // 解决移动端 click事件点击无效
                map.addEventListener("touchmove", function (e) {
                    map.enableDragging();
                });
                //  触摸结束时触发次此事件  此时开启禁止拖动
                map.addEventListener("touchend", function (e) {
                    map.disableDragging();
                });
                // 初始化地图 禁止拖动   注：虽禁止拖动，但是可以出发拖动事件
                map.disableDragging();
            },

            getAddressInfo: function () {
                showLoading();
                var that = this;
                var paramer = {id: that.addressId, source: 'wap', rand: Math.random()};
                $.post('{yun:}url d=wxapp h=com m=set c=getAddressInfo{/yun}', paramer, function (data) {
                    hideLoading();
                    if (data) {
                        let res = data.data;
                        that.info = res;
                        that.city = res.provinceid ? res.city_one + ' ' + res.city_two + ' ' + (res.city_three ? res.city_three : '') : that.city
                        that.provinceid = res.provinceid ? parseInt(res.provinceid) : 0;
                        that.cityid = res.cityid ? parseInt(res.cityid) : 0;
                        that.threecityid = res.three_cityid ? parseInt(res.three_cityid) : 0;
                        if (res.x && res.y) {
                            that.longitude = res.x;
                            that.latitude = res.y;
                        }
                        that.address = that.info.link_address
                        that.islook = true;
                        $('#yunvue').removeClass('none');
                    }
                }, 'json');
            },

            openAddress: function () {

                this.addressShow = true;
                let that = this;

                setTimeout(() => {
                    if (!map.bh) {
                        map = new BMap.Map("map_container");
                    }

                    if (that.latitude && that.longitude) {
                        map.centerAndZoom(new BMap.Point(that.longitude, that.latitude), 15);
                    } else if (this.city || this.info.link_address) {

                        debounce(this.localsearch());
                    } else {

                        var geolocation = new BMap.Geolocation();
                        geolocation.getCurrentPosition(function (r) {
                            if (this.getStatus() == BMAP_STATUS_SUCCESS) {

                                that.latitude = r.point.lng;
                                that.longitude = r.point.lat;

                                map.centerAndZoom(new BMap.Point(that.latitude, that.longitude), 15);
                            }else {
                                if (this.getStatus() == "6") {
                                    showToast("开启手机定位后才能使用此功能",2);return false;
                                }else if (this.getStatus() == "7") {
                                    showToast("开启手机定位后才能使用此功能",2);return false;
                                }else {
                                    showToast("地图定位出错",2);return false;
                                }
                            }
                        }, { enableHighAccuracy: true })
                    }
                    setTimeout(() => {
                        map.addEventListener("click", function (e) {
                            var info = new BMap.InfoWindow('', {
                                width: 260
                            });
                            var projection = this.getMapType().getProjection();
                            var lngLat = e.point;

                            that.latitude = lngLat.lat;
                            that.longitude = lngLat.lng;

                            map.clearOverlays();
                            var marker = new BMap.Marker(e.point);
                            map.addOverlay(marker);
                        });
                    }, 500)
                }, 600)
            }
        }
    });

    function jobAddress(e) {

        let yd = yunvue.$data;
        try {
            let link_address = e.address.value;

            if (link_address.length == 0) {
                showModal('请填写详细地址');
                return false;
            }

            yd.addressShow = false;
        } catch (e) {
        }

        return false; // 阻止form提交
    }

    function formSubmit(e) {

        var that = this,
            yd = yunvue.$data,
            obj = {
                link_man: e.link_man.value,
                link_moblie: e.link_moblie.value,
                link_phone: e.link_phone.value,
                email: e.email.value,
                link_address: e.link_address.value
            };
        try {

            if (obj.link_man.length == 0) {
                showModal('请填写联系人');
                return false;
            }

            if (obj.link_moblie.length == 0 && obj.link_phone.length == 0) {
                showModal('请填写联系电话');
                return false;
            }
            if (obj.link_moblie.length > 0) {
                if (isjsMobile(obj.link_moblie) == false) {
                    showModal('联系手机格式错误');
                    return false;
                }
            }

            obj.provinceid = yd.provinceid
            obj.cityid = yd.cityid
            obj.three_cityid = yd.threecityid

            if (obj.provinceid == 0) {
                showModal('请选择所在城市');
                return false;
            }
            if (ct[obj.provinceid]) {
                if (obj.cityid == 0) {
                    showModal('所在城市请选择二级类别');
                    return false;
                }
            }
            if (obj.link_address.length == 0) {
                showModal('请填写企业地址');
                return false;
            }

            // 处理下一步
            yd.firstData = obj;

            let formData = {};

            formData.x = yd.longitude;
            formData.y = yd.latitude;
            formData.source = 'wap';

            formData.id = that.addressId;

            Object.assign(formData, yd.firstData);

            showLoading('保存中');
            $.post('{yun:}url d=wxapp h=com m=set c=saveAddress{/yun}', formData, function (data) {
                hideLoading();
                if (data.error == 1) {
                    showModal(data.msg, function () {
                        navigateTo('index.php?c=address');
                    });
                } else {
                    showModal(data.msg);
                }
            }, 'json')
        } catch (err) {
        }

        return false;
    }
</script>
